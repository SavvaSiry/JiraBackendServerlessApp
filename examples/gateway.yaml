openapi: 3.0.0
info:
  title: Sample API
  version: 1.0.0
servers:
- url: https://d5dm09megqckrd48o48c.apigw.yandexcloud.net
paths:
  /{file+}:
    options:
      parameters:
        - name: file
          in: path
          description: greedy param
          required: false
          schema:
            type: string
      description: Greedy options
      operationId: greedyOptions
      x-yc-apigateway-integration:
        type: dummy
        http_code: 200
        content:
          "*": ""
        http_headers:
          Allow: OPTIONS, GET, HEAD, POST
          Access-Control-Allow-Origin: '*'
          Access-Control-Allow-Headers: Content-Type, Authorization
  /login:
    get:
      operationId: redirect-py
      x-yc-apigateway-integration: { type: cloud_functions, function_id: "d4end44rojph4onnrnjj", service_account: "ajeph3l839ge7nf1fvni" }
      parameters:
        - name: code
          in: query
          required: true
          schema:
            type: string
  /info:
    get:
      security:
        - bearerAuth: [ ]
      x-yc-apigateway-integration:
        type: cloud_functions
        function_id: d4e3dgln3fn1oicnjitt
  /tasks:
    get:
      security:
        - bearerAuth: [ ]
      summary: Get all tasks
      x-yc-apigateway-integration:
        type: cloud_functions
        function_id: d4ekkd32u8p6r9mj4sfh
        service_account_id: ajeph3l839ge7nf1fvni
      responses:
        200:
          description: List of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
    post:
      security:
        - bearerAuth: [ ]
      summary: Create a new task
      x-yc-apigateway-integration:
        type: cloud_functions
        function_id: d4ekkd32u8p6r9mj4sfh
        service_account_id: ajeph3l839ge7nf1fvni
      requestBody:
        description: Task object to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      responses:
        201:
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        400:
          description: Invalid request body
  /tasks/{id}:
    get:
      security:
        - bearerAuth: [ ]
      summary: Get a task by ID
      x-yc-apigateway-integration:
        type: cloud_functions
        function_id: d4ekkd32u8p6r9mj4sfh
        service_account_id: ajeph3l839ge7nf1fvni
      parameters:
        - name: id
          in: path
          description: ID of the task to get
          required: true
          schema:
            type: string
      responses:
        200:
          description: Task retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        404:
          description: Task not found
    put:
      security:
        - bearerAuth: [ ]
      summary: Update a task by ID
      x-yc-apigateway-integration:
        type: cloud_functions
        function_id: d4ekkd32u8p6r9mj4sfh
        service_account_id: ajeph3l839ge7nf1fvni
      parameters:
        - name: id
          in: path
          description: ID of the task to update
          required: true
          schema:
            type: string
      requestBody:
        description: Task object to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      responses:
        200:
          description: Task updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        400:
          description: Invalid request body
        404:
          description: Task not found
    delete:
      security:
        - bearerAuth: [ ]
      summary: Delete a task by ID
      x-yc-apigateway-integration:
        type: cloud_functions
        function_id: d4ekkd32u8p6r9mj4sfh
        service_account_id: ajeph3l839ge7nf1fvni
      parameters:
        - name: id
          in: path
          description: ID of the task to delete
          required: true
          schema:
            type: string
      responses:
        204:
          description: Task deleted successfully
        404:
          description: Task not found
  /project/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      security:
        - bearerAuth: [ ]
      x-yc-apigateway-integration:
        type: cloud_functions
        function_id: d4emnhfvq6ojuigfjpb5
      summary: Get project by ID
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '404':
          description: Project not found
    post:
      security:
        - bearerAuth: [ ]
      x-yc-apigateway-integration:
        type: cloud_functions
        function_id: d4emnhfvq6ojuigfjpb5
      summary: Create new project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '201':
          description: Project created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          description: Invalid request body
    put:
      security:
        - bearerAuth: [ ]
      x-yc-apigateway-integration:
        type: cloud_functions
        function_id: d4emnhfvq6ojuigfjpb5
      summary: Update project by ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          description: Project updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          description: Invalid request body
    delete:
      security:
        - bearerAuth: [ ]
      x-yc-apigateway-integration:
        type: cloud_functions
        function_id: d4emnhfvq6ojuigfjpb5
      summary: Delete project by ID
      responses:
        '204':
          description: Project deleted successfully
        '404':
          description: Project not found

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-yc-apigateway-authorizer:
        type: function
        function_id: d4e0klvlgsd0kd84e0rj
        authorizer_result_ttl_in_seconds: 300
  schemas:
    Task:
      type: object
      properties:
        id:
          type: string
          description: ID of the task
        title:
          type: string
          description: Title of the task
        description:
          type: string
          description: Description of the task
      required:
        - title
    Project:
      type: object
      required:
        - name
        - manager
      properties:
        id:
          type: string
          description: Unique identifier for the project
        name:
          type: string
          description: Name of the project
        description:
          type: string
          description: Description of the project
        manager:
          type: string
          description: Manager of the project
      example:
        id: 215c746b-b053-4b47-a9cc-3f92ad56f864
        name: Project A
        description: This is project A
        manager: John Doe